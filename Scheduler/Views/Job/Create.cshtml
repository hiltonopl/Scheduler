@model Scheduler.Models.ViewModel.JobModelView

@{
    ViewBag.Title = "Create";
}

<h2>Create New Job</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.JobType != null)
            {@Html.DropDownListFor(model => model.JobTypeID,
                                                         new SelectList(Model.JobType, "Value", "Text"),
                                                         "",
                                                         new { id = "ddlCustomer", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobTypeID, "", new { @class = "text-danger" })
        }
            Add new Job Type @Html.ActionLink("New Jobtype", "CreateJobType", "Job")
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.JobCustomer.Customer != null)
            {@Html.DropDownListFor(model => model.CustomerID,
                                                         new SelectList(Model.JobCustomer.Customer, "Value", "Text"),
                                                         "",
                                                         new { id = "ddlCustomer", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        }
            Add new Customer @Html.ActionLink("New Customer", "CreateCustomer", "Account")
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
    <br />
    @Html.ActionLink("Manage Jobs", "Index", "Job")
</div>
